name: Package Application with Pyinstaller

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  version_check:
    runs-on: ubuntu-latest
    outputs:
      should_update: ${{ steps.set_output.outputs.should_update }}
    steps:
        - uses: actions/checkout@v2
    
        - name: Get Commit version
          run: |
            VER=$(cat version.txt)
            echo "VERSION=$VER" >> $GITHUB_ENV
            
        - name: Get latest release
          id: latest_release
          uses: pozetroninc/github-action-get-latest-release@master
          with:
            repository: ${{ github.repository }}
            token: ${{ secrets.GITHUB_TOKEN }}

        - id: version
          uses: madhead/semver-utils@latest
          with:
            version: ${{ env.VERSION }}
            compare-to: ${{ steps.latest_release.outputs.release }}

        - id: set_output
          run: |
            echo "Comparing latest release (${{ steps.latest_release.outputs.release }}) and repo version (${{ env.VERSION }})."
            if [ "${{ steps.version.outputs.comparison-result }}" == ">" ]; then
              echo "Latest release is older than repo version; needs updating."
              echo "should_update=true" >> "$GITHUB_OUTPUT"
            else
              echo "Latest release is not older than repo version; no update needed."
              echo "should_update=false" >> "$GITHUB_OUTPUT"
            fi
          
        
  build:
    runs-on: ubuntu-latest
    needs: [version_check]
    if: needs.version_check.outputs.should_update == 'true'
    permissions:
      contents: write

    steps:
    - uses: actions/checkout@v2

    - name: Get version
      run: |
        VER=$(cat version.txt)
        echo "VERSION=$VER" >> $GITHUB_ENV
        echo "PKG_NAME=WacK-Repackager-${VER}_windows-x64" >> $GITHUB_ENV

    # - name: Install pip requirements
    #   run: |
    #     python -m pip install --upgrade pip
    #     pip install -r requirements.txt

    - name: Build application
      uses: JackMcKew/pyinstaller-action-windows@main
      with:
        path: src
        spec: build.spec
        requirements: ../requirements.txt
    
    - name: Compose package
      run: |
        mv "src/dist/windows/WacK Repackager.exe" "dist/"
        mv "dist" "WacK Repackager"

    - name: Create package zip
      uses: montudor/action-zip@v1
      with:
        args: zip -qq -r ${{ env.PKG_NAME }}.zip "WacK Repackager"

    - name: Create Release
      id: create_release
      uses: ncipollo/release-action@v1
      with:
        name: WacK Repackager ${{ env.VERSION }}
        tag: ${{ env.VERSION }}
        artifactErrorsFailBuild: true
        artifacts: "${{ env.PKG_NAME }}.zip"
        allowUpdates: true